name: Deploy
on: 
  push:
    branches:
      - main
jobs:
  Build-And-Upload-Frontend:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://npm.pkg.github.com/        
      - run: npm install
        working-directory: ./frontend
      - name: Build
        run: |
          npx browserslist@latest --update-db
          echo "CLIENT_ID="$CLIENT_ID"">>.env
          npm run build   
        working-directory: ./frontend
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
      - name: Add SSH Key
        shell: bash
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          mkdir ~/.ssh
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/gh_actions_key
          chmod 400 ~/.ssh/gh_actions_key
      - name: Deploy Files
        shell: bash
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
        run: |
          cd dist/
          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no "$DEPLOYMENT_USER"@"$SERVER_IP" "rm -f -r /var/www/dronespots && mkdir -p /var/www/dronespots"
          rsync -avz --exclude=".*" -e "ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no" . "$DEPLOYMENT_USER"@"$SERVER_IP":/var/www/dronespots
        working-directory: ./frontend 
  Build-And-Upload-Backend:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build & Publish Package
        run: mvn clean package -ntp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: ./backend
      - name: Add SSH Key
        shell: bash
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          mkdir ~/.ssh
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/gh_actions_key
          chmod 400 ~/.ssh/gh_actions_key
      - name: Upload Built Jar
        shell: bash
        run: |
          cd target/
          mv "backend-1.0.jar" "dronespots-backend-build.jar"
          rsync -avz -e "ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no" dronespots-backend-build.jar "$DEPLOYMENT_USER"@"$SERVER_IP":/home/"$DEPLOYMENT_USER"
        working-directory: ./backend
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
      - name: Update
        shell: bash
        run: |
          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no "$DEPLOYMENT_USER"@"$SERVER_IP" "screen -ls | awk -vFS='\t|[.]' '/dronespots/ {system(\"screen -S \"\$2\" -X quit\")}'"
          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no "$DEPLOYMENT_USER"@"$SERVER_IP" "cp dronespots-backend-build.jar dronespots-backend.jar"
          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no "$DEPLOYMENT_USER"@"$SERVER_IP" "screen -dmS dronespots"
          sleep 3
          ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no "$DEPLOYMENT_USER"@"$SERVER_IP" 'screen -S dronespots -X stuff "java -jar -Dspring.profiles.active=cloud /home/deployer/dronespots-backend.jar --spring.config.location=file:/home/deployer/dronespots-prod.yml^M"'
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          DEPLOYMENT_USER: ${{ secrets.DEPLOYMENT_USER }}
        working-directory: ./backend